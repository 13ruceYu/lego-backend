name: 自动部署新版本到服务器
on: 
  push:
    tags: 
      - 'v*.*.*'
jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # 创建 env 文件
      # build docker image
      # start app
      - name: create env file
        run: |
          touch .env
          echo ALI_ACCESS_KEY=${{secrets.ALI_ACCESS_KEY}} >> .env
          echo ALI_SECRET_KEY=${{secrets.ALI_SECRET_KEY}} >> .env
          echo ALI_OSS_BUCKET=${{secrets.ALI_OSS_BUCKET}} >> .env
          echo ALI_OSS_ENDPOINT=${{secrets.ALI_OSS_ENDPOINT}} >> .env
          echo GH_CID=${{secrets.GH_CID}} >> .env
          echo GH_SECRET=${{secrets.GH_SECRET}} >> .env
          echo GITEE_CID=${{secrets.GITEE_CID}} >> .env
          echo GITEE_SECRET=${{secrets.GITEE_SECRET}} >> .env
          echo JWT_SECRET=${{secrets.JWT_SECRET}} >> .env
          echo MONGO_INITDB_ROOT_USERNAME=${{secrets.MONGO_INITDB_ROOT_USERNAME}} >> .env
          echo MONGO_INITDB_ROOT_PASSWORD=${{secrets.MONGO_INITDB_ROOT_PASSWORD}} >> .env
          echo MONGO_INITDB_ROOT_USERNAME=${{secrets.MONGO_INITDB_ROOT_USERNAME}} >> .env
          echo MONGO_DB_USERNAME=${{secrets.MONGO_DB_USERNAME}} >> .env
          echo MONGO_DB_PASSWORD=${{secrets.MONGO_DB_PASSWORD}} >> .env
          echo REDIS_PASSWORD=${{secrets.REDIS_PASSWORD}} >> .env
          echo PING_ENV=${{secrets.PING_ENV}} >> .env
      # 使用阿里云ACR 登录 docker
      - name: login ACR
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.cn-hangzhou.aliyuncs.com
          username: ${{secrets.ACR_USERNME}}
          password: ${{secrets.ACR_PASSWORD}}
      # 使用正确的 GitHub tag 进行 docker build
      - name: build image for docker
        run: docker build --tag "registry.cn-hangzhou.aliyuncs.com/13ruceyu/lego-backend:${{github.ref_name}}" .
      - name: push image to ACR
        run: docker push registry.cn-hangzhou.aliyuncs.com/13ruceyu/lego-backend:${{github.ref_name}}
      # 查找替换 docker-compose-online 中的 tag
      - name: find and replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "{{tag}}"
          replace: ${{github.ref_name}}
          include: "docker-compose-online.yml"
      # 拷贝文件夹到 server，包括 .env, docker-compose-online.yml, mongo-entrypoint
      - name: copy nessesary files to on folder
        run: |
          mkdir lego-backend
          cp .env docker-compose-online.yml lego-backend
          cp -r mongo-entrypoint lego-backend
          ls -a lego-backend
      - name: copy lego-backend folder to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PWD }}
          source: lego-backend
          target: '~'
      # ssh 登录并重启服务
      - name: ssh login and restart docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PWD }}
          script_stop: true
          # 登录阿里云 ACR
          script: |
            docker login --username=${{secrets.ACR_USERNME}} --password=${{secrets.ACR_PASSWORD}} registry.cn-hangzhou.aliyuncs.com
            cd ~/lego-backend
            docker compose -f docker-compose-online.yml down
            docker compose -f docker-compose-online.yml up -d
            rm -rf .env
            docker logout registry.cn-hangzhou.aliyuncs.com
        